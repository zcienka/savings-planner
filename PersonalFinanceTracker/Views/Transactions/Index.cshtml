@model Tuple<IEnumerable<Transaction>, IEnumerable<TransactionCategory>>

@{
    ViewData["Title"] = "Transactions";

    var transactions = Model.Item1;

    Pager pager = new Pager();

    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
    }

}
<script>
    function filterTransactions(categoryName) {
        if (categoryName === "") {
            window.location.href = '@Url.Action("Index", "Transactions")';
        } else {
            window.location.href = '@Url.Action("Index", "Transactions")?categoryName=' + categoryName;
        }
    }
</script>

<div class="d-flex flex-column align-items-start">
    <h1>Transactions</h1>
    <button class="btn">
        <a asp-action="Create">Create New</a>
    </button>


    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Item1.FirstOrDefault().Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item1.FirstOrDefault().Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item1.FirstOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item1.FirstOrDefault().Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item1.FirstOrDefault().Amount)
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in transactions)
        {
            <tr class="cursor-pointer py-2">
                <td class="align-middle" onclick="location.href = '@Url.Action("Edit", "Transactions", new { id = item.Id })'">
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td class="align-middle" onclick="location.href = '@Url.Action("Edit", "Transactions", new { id = item.Id })'">
                    @item.Date.ToString("MM/dd/yyyy HH:mm:ss")
                </td>
                <td class="align-middle" onclick="location.href = '@Url.Action("Edit", "Transactions", new { id = item.Id })'">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td class="align-middle" onclick="location.href = '@Url.Action("Edit", "Transactions", new { id = item.Id })'">
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td class="align-middle" onclick="location.href = '@Url.Action("Edit", "Transactions", new { id = item.Id })'">
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td class="align-middle" onclick="location.href = '@Url.Action("Delete", "Transactions", new { id = item.Id })'">
                    <object type="image/svg+xml" data="~/icons/delete.svg" class="p-2"></object>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div class="container">
        @if (pager.TotalPages > 0)
        {
            <ul class="pagination justify-content-end">
                @if (pager.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="Transactions" asp-action="Index" asp-route-pg="1">First</a>
                    </li>
                    <li>
                        <a class="page-link" asp-controller="Transactions" asp-action="Index" asp-route-pg="@(pager.CurrentPage - 1)">Previous</a>
                    </li>
                }
                @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
                {
                    <li class="page-item @(pge == pager.CurrentPage ? "active" : "bg-secondary")">
                        <a class="page-link" asp-controller="Transactions" asp-action="Index" asp-route-pg="@pge">
                            @pge
                        </a>
                    </li>
                }
                @if (pager.CurrentPage < pager.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="Transactions" asp-action="Index" asp-route-pg="@(pager.CurrentPage + 1)">Next</a>
                    </li>
                    <li>
                        <a class="page-link" asp-controller="Transactions" asp-action="Index" asp-route-pg="@(pager.TotalPages)">Last</a>
                    </li>
                }
            </ul>
        }
    </div>
</div>